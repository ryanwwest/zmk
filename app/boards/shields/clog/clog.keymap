/*
* Copyright (c) 2022 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MAIN 0
#define SYM 1
#define NAV 2
#define BT 3

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <140>;
};
/ {
    combos {
        compatible = "zmk,combos";

        // LEFT CENTER ROW
        enter {
            timeout-ms = <40>;
            key-positions = <11 12>;
            bindings = <&kp ENTER>;
        };
        esc {
            timeout-ms = <40>;
            key-positions = <10 12>;
            bindings = <&kp ESC>;
        };
        tab {
            timeout-ms = <40>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        del {
            timeout-ms = <40>;
            key-positions = <10 11 12>;
            bindings = <&kp ESC>;
        };


        // RIGHT CENTER ROW
        dash {
            timeout-ms = <40>;
            key-positions = <15 16>;
            bindings = <&kp MINUS>;
        };
        underscore {
            timeout-ms = <40>;
            key-positions = <15 17>;
            bindings = <&kp UNDERSCORE>;
        };
        backspace {
            timeout-ms = <40>;
            key-positions = <15 16 17>;
            bindings = <&kp BACKSPACE>;
        };

        single_quote {
            timeout-ms = <40>;
            key-positions = <17 18>;
            bindings = <&kp SQT>;
        };
        double_quote {
            timeout-ms = <40>;
            key-positions = <16 18>;
            bindings = <&kp DQT>;
        };

        grave {
            timeout-ms = <40>;
            key-positions = <28 29>;
            bindings = <&kp GRAVE>;
        };

	// MOD COMBOS - 9 10 11 12 +31 activator
	// LEFT HAND
        l_gui {
            timeout-ms = <40>;
            key-positions = <9 31>;
            bindings = <&kp LGUI>;
        };
        l_alt {
            timeout-ms = <40>;
            key-positions = <10 31>;
            bindings = <&kp LALT>;
        };
        l_ctl {
            timeout-ms = <25>;
            key-positions = <11 31>;
            bindings = <&kp LCTRL>;
        };
        l_shift {
            timeout-ms = <40>;
            key-positions = <12 31>;
            bindings = <&kp LSHIFT>;
        };
	// 2 mod keys
        l_gui_alt {
            timeout-ms = <40>;
            key-positions = <9 10 31>;
            bindings = <&kp LG(LALT)>;
        };
        l_gui_ctl {
            timeout-ms = <40>;
            key-positions = <9 11 31>;
            bindings = <&kp LG(LCTRL)>;
        };
        l_gui_sft {
            timeout-ms = <40>;
            key-positions = <9 12 31>;
            bindings = <&kp LG(LSHIFT)>;
        };
        l_alt_ctl {
            timeout-ms = <40>;
            key-positions = <10 11 31>;
            bindings = <&kp LC(LALT)>;
        };
        l_alt_sft {
            timeout-ms = <40>;
            key-positions = <10 12 31>;
            bindings = <&kp LS(LALT)>;
        };
        l_ctl_sft {
            timeout-ms = <40>;
            key-positions = <11 12 31>;
            bindings = <&kp LC(LSHIFT)>;
        };
	// 3 mod keys
        l_alt_ctl_sft {
            timeout-ms = <40>;
            key-positions = <10 11 12 31>;
            bindings = <&kp LS(LC(LALT))>;
        };
        l_gui_ctl_sft {
            timeout-ms = <40>;
            key-positions = <9 11 12 31>;
            bindings = <&kp LG(LC(LSHIFT))>;
        };
        l_gui_alt_ctl {
            timeout-ms = <40>;
            key-positions = <9 10 11 31>;
            bindings = <&kp LG(LC(LALT))>;
        };
	// 4 mod keys
        l_gui_alt_ctl_sft {
            timeout-ms = <40>;
            key-positions = <9 10 11 12 31>;
            bindings = <&kp LG(LS(LC(LALT)))>;
        };

	// RIGHT HAND - 15 16 17 18 +32 activator
        r_gui {
            timeout-ms = <40>;
            key-positions = <18 32>;
            bindings = <&kp LGUI>;
        };
        r_alt {
            timeout-ms = <40>;
            key-positions = <17 32>;
            bindings = <&kp LALT>;
        };
        r_ctl {
            timeout-ms = <40>;
            key-positions = <16 32>;
            bindings = <&kp LCTRL>;
        };
        r_shift {
            timeout-ms = <40>;
            key-positions = <15 32>;
            bindings = <&kp LSHIFT>;
        };
	// 2 mod keys
        r_gui_alt {
            timeout-ms = <40>;
            key-positions = <17 18 32>;
            bindings = <&kp LG(LALT)>;
        };
        r_gui_ctl {
            timeout-ms = <40>;
            key-positions = <16 18 32>;
            bindings = <&kp LG(LCTRL)>;
        };
        r_gui_sft {
            timeout-ms = <40>;
            key-positions = <15 18 32>;
            bindings = <&kp LG(LSHIFT)>;
        };
        r_alt_ctl {
            timeout-ms = <40>;
            key-positions = <16 17 32>;
            bindings = <&kp LC(LALT)>;
        };
        r_alt_sft {
            timeout-ms = <40>;
            key-positions = <15 17 32>;
            bindings = <&kp LS(LALT)>;
        };
        r_ctl_sft {
            timeout-ms = <40>;
            key-positions = <15 16 32>;
            bindings = <&kp LC(LSHIFT)>;
        };
	// 3 mod keys
        r_alt_ctl_sft {
            timeout-ms = <40>;
            key-positions = <16 17 18 32>;
            bindings = <&kp LS(LC(LALT))>;
        };
        r_gui_ctl_sft {
            timeout-ms = <40>;
            key-positions = <15 16 18 32>;
            bindings = <&kp LG(LC(LSHIFT))>;
        };
        r_gui_alt_ctl {
            timeout-ms = <40>;
            key-positions = <15 17 18 32>;
            bindings = <&kp LG(LC(LALT))>;
        };
	// 4 mod keys
        r_gui_alt_ctl_sft {
            timeout-ms = <40>;
            key-positions = <15 16 17 18 32>;
            bindings = <&kp LG(LS(LC(LALT)))>;
        };


/* combo key-positions:
*        0  1  2  3    4  5  6  7
* 8  9  10 11 12 13   14 15 16 17 18 19
*    20 21 22 23 24   25 26 27 28 29
*             30 31   32 33           */
    };

    keymap {
        compatible = "zmk,keymap";

        MAIN_layer {
            bindings = <
                            &kp W      &kp E       &kp R        &kp T                &kp Y     &kp U        &kp I           &kp O
        &kp Q   &kp A       &kp S      &kp D       &kp F        &kp G                &kp H     &kp J        &kp K           &kp L        &kp SEMI       &kp P
                &mt LGUI Z  &mt LALT X &mt LCTRL C &mt LSHIFT V &kp B                &kp N     &mt RSHIFT M &mt RCTRL COMMA &mt RALT DOT &mt RGUI FSLH
                                                   &mo NAV      &mt LSHIFT BSPC  &kp SPACE &mo SYM
            >;
        };
        SYM_layer {
            bindings = <
                         &kp AMPS  &kp STAR   &kp TILDE  &kp RBRC                  &kp EQUAL  &kp N7 &kp N8 &kp N9 
      &kp LPAR &kp LBRC  &kp EXCL  &kp AT     &kp HASH   &kp RPAR                  &kp PLUS   &kp N1 &kp N2 &kp N3 &kp N0   &kp DOT
               &kp LBKT  &kp DLLR  &kp PRCNT  &kp CARET  &kp RBKT                  &kp PIPE   &kp N4 &kp N5 &kp N6 &kp BSLH 
                                                          &mo BT &trans       &trans &trans
            >;
        };
        NAV_layer {
            bindings = <
                            &none       &none     &none      &none               &kp HOME     &kp PG_DN    &kp PG_UP  &kp END                    
          &none    &none    &none       &none     &none      &none               &kp LEFT     &kp DOWN     &kp UP     &kp RIGHT     &none &none  
                   &kp LGUI &kp LALT    &kp LCTRL &kp LSHIFT &none               &kp LC(LEFT) &kp LC(DOWN) &kp LC(UP) &kp LC(RIGHT) &none        
                                                     &trans      &trans        &trans    &mo BT
            >;
        };
        BT_layer {
            bindings = <
                             &none        &none        &none        &none                &none  &kp F7  &kp F8 &kp F9
          &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR           &none  &kp F1  &kp F2 &kp F3 &kp F10 &kp F12
                &kp LGUI     &kp LALT     &kp LCTRL    &kp LSHIFT   &none                &none  &kp F4  &kp F5 &kp F6 &kp F11
                                                           &trans      &trans        &trans    &trans
            >;
        };
    };
};
